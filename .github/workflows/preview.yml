name: Preview Environment

on:
  pull_request:
    types: [opened, synchronize]

env:
  PROJECT_ID: previewbuild
  BUCKET_NAME: previewbuild-pr-${{ github.event.pull_request.number }}

jobs:
  setup-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - id: "auth"
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_KEY }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Create and configure bucket
        run: |
          # Create bucket if it doesn't exist
          if ! gsutil ls gs://${{ env.BUCKET_NAME }} 2>/dev/null; then
            gsutil mb -p ${{ env.PROJECT_ID }} -l us-central1 gs://${{ env.BUCKET_NAME }}
            gsutil web set -m index.html -e index.html gs://${{ env.BUCKET_NAME }}
            gsutil iam ch allUsers:objectViewer gs://${{ env.BUCKET_NAME }}
            cat > website.json << EOF
            {
              "mainPageSuffix": "index.html",
              "notFoundPage": "index.html"
            }
            EOF
            gsutil web set -m index.html -e index.html gs://${{ env.BUCKET_NAME }}
          fi

      - name: Upload build files
        run: |
          gcloud storage cp -r dist/* gs://${{ env.BUCKET_NAME }}

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const previewUrl = `https://storage.googleapis.com/${{ env.BUCKET_NAME }}`;
            const message = `ðŸš€ Preview deployment for PR #${{ github.event.pull_request.number }} is ready!\n\n` +
                          `ðŸ”— **Preview URL**: ${previewUrl}\n\n` +
                          `_This preview environment will be automatically deleted when the PR is closed._`;

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const existingComment = comments.data.find(comment => 
              comment.body.includes('Preview deployment for PR')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }
